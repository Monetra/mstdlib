env:
  CIRRUS_CLONE_DEPTH: 1

task:
  matrix:
    - name: "CMAKE"
      env:
        BUILD_TYPE: "cmake"
    - name: "AUTOTOOLS"
      env:
        BUILD_TYPE: "autotools"
    - name: "ASAN"
      env:
        BUILD_TYPE: "asan"
    - name: "ANALYZE"
      env:
        BUILD_TYPE: "analyze"
  matrix:
    - name: "Debian"
      env:
        DIST: "DEBIAN"
        LC_ALL: "C"
        SCAN_BUILD: "scan-build"
        MAKE: "make"
      container:
        image: debian:latest
    - name: "FreeBSD"
      env:
        DIST: "FREEBSD"
        SCAN_BUILD: "scan-build"
        MAKE: "gmake"
      freebsd_instance:
        image_family: freebsd-13-0

  install_script:
    - |
      case "${DIST}" in
        DEBIAN)
          apt-get update && \
          apt-get install -y cmake libssl-dev doxygen libpq-dev libmariadbd-dev unixodbc-dev libsqlite3-dev libc-ares-dev check ninja-build
          case "${BUILD_TYPE}" in
            asan)
              apt-get install -y clang
              ;;
            analyze)
              apt-get install -y clang clang-tools
              ;;
          esac
          ;;
        FREEBSD)
          # pkg upgrade -y && \
          pkg install -y cmake check c-ares ninja
          case "${BUILD_TYPE}" in
            asan|analyze)
              pkg install -y llvm
              ;;
            autotools)
              pkg install -y autoconf automake libtool gmake
              ;;
          esac
          ;;
      esac

  script:
    - |
      case "${BUILD_TYPE}" in
        cmake)
          cmake -DCMAKE_BUILD_TYPE="RelWithDebInfo" -DMSTDLIB_BUILD_FOR_CI=TRUE -DOPENSSL_ROOT_DIR="$OPENSSL_ROOT_DIR" -DSQLite_DIR="$SQLite_DIR" -G Ninja -H. -B_builds && \
          cmake --build _builds && \
          cmake -E env CTEST_OUTPUT_ON_FAILURE=1 CK_VERBOSITY=verbose cmake --build _builds --target check
          ;;
        asan)
          cmake -DCMAKE_BUILD_TYPE="RelWithDebInfo" -DMSTDLIB_BUILD_FOR_CI=TRUE -DOPENSSL_ROOT_DIR="$OPENSSL_ROOT_DIR" -DSQLite_DIR="$SQLite_DIR" -DM_ASAN=TRUE -G Ninja -H. -B_builds && \
          cmake --build _builds && \
          cmake -E env CTEST_OUTPUT_ON_FAILURE=1 CK_VERBOSITY=verbose CK_FORK=no CK_LOG_FILE_NAME=- cmake --build _builds --target check
          ;;
        autotools)
          ./buildconf.sh && \
          mkdir build && \
          cd build && \
          ../configure ${CONFIG_OPTS} && \
          ${MAKE} V=1 -j2 && \
          cp sql/sqlite/.libs/mstdlib_sql_sqlite.so sql/.libs/ && \
          export CK_VERBOSITY=verbose && \
          make check && \
          cd ..
          ;;
        analyze)
          ${SCAN_BUILD} -v cmake -DCMAKE_BUILD_TYPE="RelWithDebInfo" -DMSTDLIB_BUILD_FOR_CI=TRUE -DOPENSSL_ROOT_DIR="$OPENSSL_ROOT_DIR" -DSQLite_DIR="$SQLite_DIR" -G Ninja -H. -B_builds && \
          ${SCAN_BUILD} -v cmake --build _builds && \
          cmake -E env CTEST_OUTPUT_ON_FAILURE=1 CK_VERBOSITY=verbose cmake --build _builds --target check
          ;;
       esac

