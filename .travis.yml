language: c

dist: trusty
sudo: false

cache: apt

addons:
  apt:
    sources: &apt_sources
      - ubuntu-toolchain-r-test
      - sourceline: 'ppa:adrozdoff/cmake' # newer cmake
    packages: &default_packages
      - cmake
      - libssl-dev
      - doxygen
      - libpq-dev
      - libmariadbd-dev
      - unixodbc-dev
      - check

env:
  global:
    - MAKEFLAGS="-j 2"

matrix:
  include:
    - os: linux
      env: 
        - BUILD_TYPE="cmake"
        - OPENSSL_ROOT_DIR=""
      compiler: clang
    - os: linux
      env:
        - BUILD_TYPE="cmake"
        - OPENSSL_ROOT_DIR=""
      compiler: gcc
    - os: linux
      env:
        - BUILD_TYPE="autotools"
        - OPENSSL_ROOT_DIR=""
        - CONFIG_OPTS=""
      compiler: gcc
    - os: osx
      env:
        - BUILD_TYPE="cmake"
        - OPENSSL_ROOT_DIR="/usr/local/opt/openssl"
    - os: osx
      env:
        - BUILD_TYPE="autotools"
        - CONFIG_OPTS="--with-ssl-dir=/usr/local/opt/openssl"

install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install openssl doxygen mariadb-connector-c libiodbc libpq check; fi


# Put in 3rd party sources and chain build
before_script:
   - wget http://sqlite.org/2017/sqlite-amalgamation-3200100.zip
   - unzip sqlite-amalgamation-3200100.zip
   - mv sqlite-amalgamation-3200100 thirdparty/sqlite-amalgamation
   - git clone https://github.com/c-ares/c-ares.git thirdparty/c-ares


script:
    - if [ "$BUILD_TYPE" = "cmake" ]     ; then cmake -DCMAKE_BUILD_TYPE="RelWithDebInfo" -DOPENSSL_ROOT_DIR="$OPENSSL_ROOT_DIR" -H. -B_builds ; fi
    - if [ "$BUILD_TYPE" = "cmake" ]     ; then cmake --build _builds && cmake --build _builds --target check ; fi
    - if [ "$BUILD_TYPE" = "autotools" ] ; then ./buildconf.sh && ./configure ${CONFIG_OPTS} ; fi
    - if [ "$BUILD_TYPE" = "autotools" ] ; then make && make check ; fi
