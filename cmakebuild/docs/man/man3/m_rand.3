.TH "m_rand" 3 "Tue Feb 20 2018" "Mstdlib-1.0.0" \" -*- nroff -*-
.ad l
.nh
.SH NAME
m_rand
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBM_RAND_MAX\fP   M_UINT64_MAX"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBM_rand\fP \fBM_rand_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBM_rand_t\fP * \fBM_rand_create\fP (M_uint64 seed)"
.br
.ti -1c
.RI "void \fBM_rand_destroy\fP (\fBM_rand_t\fP *state)"
.br
.ti -1c
.RI "M_uint64 \fBM_rand\fP (\fBM_rand_t\fP *state)"
.br
.ti -1c
.RI "M_uint64 \fBM_rand_range\fP (\fBM_rand_t\fP *state, M_uint64 min, M_uint64 max)"
.br
.ti -1c
.RI "M_uint64 \fBM_rand_max\fP (\fBM_rand_t\fP *state, M_uint64 max)"
.br
.ti -1c
.RI "\fBM_rand_t\fP * \fBM_rand_duplicate\fP (\fBM_rand_t\fP *state)"
.br
.ti -1c
.RI "void \fBM_rand_jump\fP (\fBM_rand_t\fP *state)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This is \fINOT\fP a cryptographically secure RNG\&. This should \fINEVER\fP be used for cryptographic operations\&. 
.SH "Macro Definition Documentation"
.PP 
.SS "#define M_RAND_MAX   M_UINT64_MAX"

.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBM_rand\fP \fBM_rand_t\fP"

.SH "Function Documentation"
.PP 
.SS "\fBM_rand_t\fP* M_rand_create (M_uint64 seed)"
Create a random state for use with random number generation\&.
.PP
\fBParameters:\fP
.RS 4
\fIseed\fP The seed state\&. Using the same seed will allow the sequence to be repeated\&. If 0 the seed will be a combination of system time, local and heap memory addresses\&. The data is meant to make choosing a random seed harder but still is not cryptographically secure\&. This not being a cryptographically secure random number generator we are using random data that is not cryptographically secure for speed\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Random state\&. 
.RE
.PP

.SS "void M_rand_destroy (\fBM_rand_t\fP * state)"
Destroy a random state\&.
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP The state\&. 
.RE
.PP

.SS "M_uint64 M_rand (\fBM_rand_t\fP * state)"
Generate a random number\&.
.PP
Generates a random number from 0 to M_RAND_MAX\&.
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP The state\&. Optional, can be NULL, but will incur the overhead of M_rand_create(0); \fBM_rand_destroy()\fP; per iteration if not provided\&. It is possible, in a tight loop on a very fast system for example, the same number could be generated multiple times if the state is NULL\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A random number\&. 
.RE
.PP

.SS "M_uint64 M_rand_range (\fBM_rand_t\fP * state, M_uint64 min, M_uint64 max)"
Generate a random number within a given range\&.
.PP
Range is [min, max)\&. Meaning from min to max-1\&.
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP The state\&. Optional, can be NULL, but will incur the overhead of M_rand_create(0); \fBM_rand_destroy()\fP; per iteration if not provided\&. It is possible, in a tight loop on a very fast system for example, the same number could be generated multiple times if the state is NULL\&. 
.br
\fImin\fP The min\&. 
.br
\fImax\fP The max\&. 
.RE
.PP

.SS "M_uint64 M_rand_max (\fBM_rand_t\fP * state, M_uint64 max)"
Generate a random number with a given maximum\&.
.PP
Range is [0, max)\&. Meaning from 0 to max-1\&.
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP The state\&. Optional, can be NULL, but will incur the overhead of M_rand_create(0); \fBM_rand_destroy()\fP; per iteration if not provided\&. It is possible, in a tight loop on a very fast system for example, the same number could be generated multiple times if the state is NULL\&. 
.br
\fImax\fP The max\&. 
.RE
.PP

.SS "\fBM_rand_t\fP* M_rand_duplicate (\fBM_rand_t\fP * state)"
Duplicate the state of a random number generator\&.
.PP
If state is NULL this is equivalent to M_rand_create(0)\&.
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP The state\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Random state\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBM_rand_jump\fP 
.RE
.PP

.SS "void M_rand_jump (\fBM_rand_t\fP * state)"
Advance the random number generator to generate non-overlapping sequences\&.
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP The state\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Random state\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBM_rand_duplicate\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Mstdlib-1\&.0\&.0 from the source code\&.
