.TH "m_hash_func" 3 "Tue Feb 20 2018" "Mstdlib-1.0.0" \" -*- nroff -*-
.ad l
.nh
.SH NAME
m_hash_func
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "M_uint32 \fBM_hash_func_hash_str\fP (const void *key, M_uint32 seed)"
.br
.ti -1c
.RI "M_uint32 \fBM_hash_func_hash_str_casecmp\fP (const void *key, M_uint32 seed)"
.br
.ti -1c
.RI "M_uint32 \fBM_hash_func_hash_u64\fP (const void *key, M_uint32 seed)"
.br
.ti -1c
.RI "M_uint32 \fBM_hash_func_hash_vp\fP (const void *key, M_uint32 seed)"
.br
.ti -1c
.RI "void * \fBM_hash_func_u64dup\fP (const void *arg)"
.br
.ti -1c
.RI "void * \fBM_hash_void_strdup\fP (const void *arg)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "M_uint32 M_hash_func_hash_str (const void * key, M_uint32 seed)"
Implementation will compute a hash using FNV1a from a string\&. 
.SS "M_uint32 M_hash_func_hash_str_casecmp (const void * key, M_uint32 seed)"
Implementation will compute a hash using FNV1a from a string in a case-insensitive manner\&. 
.SS "M_uint32 M_hash_func_hash_u64 (const void * key, M_uint32 seed)"
Implementation will compute a hash using FNV1a from a u64 (pointer)\&. 
.SS "M_uint32 M_hash_func_hash_vp (const void * key, M_uint32 seed)"
Implemntation will compute a hash using FNV1a from a pointer address 
.SS "void* M_hash_func_u64dup (const void * arg)"
This function duplicates a M_uint64 (pointer)\&. 
.SS "void* M_hash_void_strdup (const void * arg)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Mstdlib-1\&.0\&.0 from the source code\&.
