.TH "m_verify" 3 "Tue Feb 20 2018" "Mstdlib-1.0.0" \" -*- nroff -*-
.ad l
.nh
.SH NAME
m_verify \- Validation of strings against various standards (email address, domain name, etc\&.)\&.  

.SH SYNOPSIS
.br
.PP
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBM_verify_email_listdelim_t\fP { \fBM_VERIFY_EMAIL_LISTDELIM_AUTO\fP = 0, \fBM_VERIFY_EMAIL_LISTDELIM_SEMICOLON\fP, \fBM_VERIFY_EMAIL_LISTDELIM_COMMA\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "M_bool \fBM_verify_email_address\fP (const char *addr)"
.br
.ti -1c
.RI "M_bool \fBM_verify_domain\fP (const char *dname)"
.br
.ti -1c
.RI "M_bool \fBM_verify_email_address_list\fP (const char *addr_list, \fBM_verify_email_listdelim_t\fP delim_type)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Validation of strings against various standards (email address, domain name, etc\&.)\&. 


.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBM_verify_email_listdelim_t\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIM_VERIFY_EMAIL_LISTDELIM_AUTO \fP\fP
.TP
\fB\fIM_VERIFY_EMAIL_LISTDELIM_SEMICOLON \fP\fP
.TP
\fB\fIM_VERIFY_EMAIL_LISTDELIM_COMMA \fP\fP
.SH "Function Documentation"
.PP 
.SS "M_bool M_verify_email_address (const char * addr)"
Verify that the given single email address is valid\&.
.PP
An email address is composed of the following parts: 
.PP
.nf
display_name<local_part@domain>
.fi
.PP
.PP
The display name may contain double-quotes\&. Within double-quotes, the full range of symbols may be used (dot, comma, semicolon, at, escaped double-quote, etc\&.)\&. The space and tab characters are allowed in the display name, even outside of quotes\&.
.PP
If the display name is not provided, the angle brackets around the rest of the email address are optional\&.
.PP
This email address validator differs from the RFC standards for email in the following ways:
.PP
.PD 0
.IP "\(bu" 2
Double quotes are not allowed, except in the display name (a\&.k\&.a\&. friendly name)\&. 
.IP "\(bu" 2
Comments (chunks of text enclosed by parentheses) are not allowed, though parenthesis are allowed in the display name if they're surrounded by double-quotes\&. 
.IP "\(bu" 2
Consecutive dots are allowed in the local part of the address, since they are accepted by gmail\&. 
.IP "\(bu" 2
Only the following non-alphanumeric characters are allowed in the local part:
.PP
.nf
'*+-=^_{}.~ 
.fi
.PP
 
.IP "\(bu" 2
IP address domains are not allowed (e\&.g\&., joe\&.smith@[192\&.168\&.2\&.1] is invalid)\&. 
.IP "\(bu" 2
UTF-8 is not allowed in any part of the address (display name, local part, or domain name)\&.
.PP
Example of valid address: 
.PP
.nf
"Public, John Q. (Support)" <jq..public+support@generic-server.com> 
.fi
.PP
.PP
\fBSee also:\fP
.RS 4
\fBM_verify_email_address_list\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIaddr\fP email address to verify 
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE if the address is valid 
.RE
.PP

.SS "M_bool M_verify_domain (const char * dname)"
Verify that the given domain name is valid\&.
.PP
Valid domain names are composed of letters, digits, and hyphens ('-'), separated into sections by dots ('\&.')\&. Each section is limited to 63 chars, and may not begin or end with a hyphen\&. The entire domain name is limited to 253 characters - note that a 253 character domain name takes 255 bytes to store with the length-prefixed encoding used by DNS\&.
.PP
\fBParameters:\fP
.RS 4
\fIdname\fP domain name to verify 
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE if the domain name is valid 
.RE
.PP

.SS "M_bool M_verify_email_address_list (const char * addr_list, \fBM_verify_email_listdelim_t\fP delim_type)"
Verify that the given list of email addresses is valid\&.
.PP
The list may be delimited by either commas (',') or semicolons (';'), but not both\&. This function limits the number of addresses in the list to 100 - this isn't a true standard, but it's the limit used virutally everywhere in practice\&.
.PP
The list parser is tolerant of whitespace - individual addresses are trimmed before they're passed to the email address validator\&.
.PP
The individual addresses in the list may include display names (a\&.k\&.a friendly names)\&.
.PP
\fBSee also:\fP
.RS 4
\fBM_verify_email_address\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIaddr_list\fP list of email addresses to verify 
.br
\fIdelim_type\fP Type of delimiter to expect\&. Can be auto detected\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
TRUE if the list and all emails in it are valid 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Mstdlib-1\&.0\&.0 from the source code\&.
